{"ast":null,"code":"var _jsxFileName = \"/Users/ayselpolat/Documents/react-projects/15-cocktails/setup/src/pages/SingleCocktail.js\";\nimport React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nconst url = \"www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\";\n\nconst SingleCocktail = () => {\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n  React.useEffect(() => {\n    setLoading(true);\n\n    const fetchSingleCocktail = async () => {\n      try {\n        const response = await fetch(`${url}${id}`);\n        const data = await response.json();\n        const {\n          drinks\n        } = data;\n\n        if (drinks) {\n          const {\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: info,\n            strCategory: category,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5\n          } = drinks[0];\n          const ingredients = [strIngredient1, strIngredient2, strIngredient3, strIngredient4, strIngredient5];\n          const newCocktail = {\n            name,\n            image,\n            info,\n            category,\n            glass,\n            instructions,\n            ingredients\n          };\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchSingleCocktail();\n  }, [id]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!cocktail) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }, \" No Cocktail to Display \");\n  } else {\n    {\n      const {\n        name,\n        image,\n        info,\n        category,\n        glass,\n        instructions,\n        ingredients\n      } = cocktail;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"section cocktail-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"btn btn-primary\",\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \" \", \"Back Home\", \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"section-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, \" \", name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      })));\n    }\n    ;\n  }\n};\n\nexport default SingleCocktail;","map":{"version":3,"sources":["/Users/ayselpolat/Documents/react-projects/15-cocktails/setup/src/pages/SingleCocktail.js"],"names":["React","Loading","useParams","Link","url","SingleCocktail","id","loading","setLoading","useState","cocktail","setCocktail","useEffect","fetchSingleCocktail","response","fetch","data","json","drinks","strDrink","name","strDrinkThumb","image","strAlcoholic","info","strCategory","category","strGlass","glass","strInstructions","instructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","newCocktail","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AAEA,MAAMC,GAAG,GAAG,mDAAZ;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACS,QAAN,CAAe,IAAf,CAAhC;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAMK,mBAAmB,GAAG,YAAY;AACtC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,GAAI,GAAEE,EAAG,EAAb,CAA5B;AACA,cAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAaF,IAAnB;;AACA,YAAIE,MAAJ,EAAY;AACV,gBAAM;AACJC,YAAAA,QAAQ,EAAEC,IADN;AAEJC,YAAAA,aAAa,EAAEC,KAFX;AAGJC,YAAAA,YAAY,EAAEC,IAHV;AAIJC,YAAAA,WAAW,EAAEC,QAJT;AAKJC,YAAAA,QAAQ,EAAEC,KALN;AAMJC,YAAAA,eAAe,EAAEC,YANb;AAOJC,YAAAA,cAPI;AAQJC,YAAAA,cARI;AASJC,YAAAA,cATI;AAUJC,YAAAA,cAVI;AAWJC,YAAAA;AAXI,cAYFjB,MAAM,CAAC,CAAD,CAZV;AAaA,gBAAMkB,WAAW,GAAG,CAClBL,cADkB,EAElBC,cAFkB,EAGlBC,cAHkB,EAIlBC,cAJkB,EAKlBC,cALkB,CAApB;AAQA,gBAAME,WAAW,GAAG;AAClBjB,YAAAA,IADkB;AAElBE,YAAAA,KAFkB;AAGlBE,YAAAA,IAHkB;AAIlBE,YAAAA,QAJkB;AAKlBE,YAAAA,KALkB;AAMlBE,YAAAA,YANkB;AAOlBM,YAAAA;AAPkB,WAApB;AASAzB,UAAAA,WAAW,CAAC0B,WAAD,CAAX;AACD,SAhCD,MAgCO;AACL1B,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,OAvCD,CAuCE,OAAO2B,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD9B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KA5CD;;AA6CAK,IAAAA,mBAAmB;AACpB,GAhDD,EAgDG,CAACP,EAAD,CAhDH;;AAkDA,MAAIC,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAI,CAACG,QAAL,EAAe;AACb,wBAAO;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACD,GAFD,MAEO;AACL;AAAC,YAAM;AAAEU,QAAAA,IAAF;AAAQE,QAAAA,KAAR;AAAeE,QAAAA,IAAf;AAAqBE,QAAAA,QAArB;AAA+BE,QAAAA,KAA/B;AAAsCE,QAAAA,YAAtC;AAAoDM,QAAAA;AAApD,UAAmE1B,QAAzE;AACC,0BACE;AAAS,QAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAkC,QAAA,EAAE,EAAC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEY,GAFZ,CADF,eAKE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgCU,IAAhC,CALF,eAME;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF;AAYD;AAAA;AACA;AACJ,CA7ED;;AA+EA,eAAejB,cAAf","sourcesContent":["import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\n\nconst url = \"www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\";\n\nconst SingleCocktail = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n\n  React.useEffect(() => {\n    setLoading(true);\n    const fetchSingleCocktail = async () => {\n      try {\n        const response = await fetch(`${url}${id}`);\n        const data = await response.json();\n        const { drinks } = data;\n        if (drinks) {\n          const {\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: info,\n            strCategory: category,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n          } = drinks[0];\n          const ingredients = [\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n          ];\n\n          const newCocktail = {\n            name,\n            image,\n            info,\n            category,\n            glass,\n            instructions,\n            ingredients,\n          };\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    };\n    fetchSingleCocktail();\n  }, [id]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (!cocktail) {\n    return <h2 className=\"section-title\"> No Cocktail to Display </h2>;\n  } else {\n    {const { name, image, info, category, glass, instructions, ingredients} = cocktail;\n      return (\n        <section className=\"section cocktail-section\">\n          <Link className=\"btn btn-primary\" to=\"/\">\n            {\" \"}\n            Back Home{\" \"}\n          </Link>\n          <h2 className=\"section-title\"> {name}</h2>\n          <div className=\"drink\">\n            <img src={image} />\n          </div>\n        </section>\n      );\n    };\n    }\n};\n\nexport default SingleCocktail;\n"]},"metadata":{},"sourceType":"module"}